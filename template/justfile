set positional-arguments := true

default:
  #!/usr/bin/env bash
  set -euo pipefail
  command=$(
    just --unsorted --summary |
    sed 's# #\n#g' |
    grep -v default |
    grep -v ^_ |
    fzf \
      --layout reverse \
      --preview 'echo && just --show {} | bat -f --language=bash --style=numbers' \
      --preview-window 'right:50%,border-none'
  )
  has_args=$(
    just --dump --dump-format json |
    jq --arg cmd "$command" '.recipes[]|select(.name==$cmd).parameters|length>0'
  )
  if [[ "$has_args" == "true" ]]; then
    export FZF_DEFAULT_COMMAND="echo 'Enter arguments' && just --show $command | bat -f --language=bash --style=plain"
    args=$(
      fzf \
        --layout reverse \
        --disabled \
        --bind 'down:,up:,enter:print-query' \
        --ansi
    )
    just put bold "just $command $args"
    just "$command" $args
  else
    just put bold "just $command"
    just "$command"
  fi

all: build test lint

build:
  cabal v2-build

test: doctest spec-test integration-test

doctest:
  cabal v2-test doctest

spec-test:
  cabal v2-test spec

integration-test:
  #!/usr/bin/env bash
  header() {
    just put "bold,setaf 4" "$*"
  }
  trap 'header [Cleaning up...]; arion down' EXIT
  header "[Building containerized test environment...]"
  arion build
  header "[Starting containerized test environment...]"
  arion up -d webserver
  header "[Running tests...]"
  arion run test

lint:
  hlint app lib test benchmark
  weeder

clean:
  cabal v2-clean

format: format-src format-cabal

format-src:
  find . \
    -regex '\./\(app\|lib\|test\|benchmark\).*\.hs' \
    -exec fourmolu -i {} +

format-cabal:
  cabal-fmt *.cabal -i

doc:
  cabal v2-haddock --haddock-hyperlink-source

bench:
  cabal v2-bench

# arion lacks some features and options of docker-compose,
# so we use a wrapper script to pass through.
# e.g. `just docker-compose exec -it webserver bash`
docker-compose *args:
  #!/usr/bin/env bash
  set -euo pipefail
  project=$(nix eval --impure --expr \
    '(import ./arion-compose.nix {pkgs={};}).config.project.name' |
    xargs echo \
  )
  docker compose --file <(arion config) --project-name "$project" "$@"

# See https://www.mankier.com/5/terminfo#Description-Predefined_Capabilities for a list of capabilities.
put caps *args:
  #!/usr/bin/env bash
  set -euo pipefail
  readarray -td, caps < <(printf "%s" "$1")
  shift
  escape_sequence=''
  for c in "${caps[@]}"; do
    # shellcheck disable=SC2046 # for c='setaf 4' for example
    escape_sequence+=$(tput $c)
  done
  if [[ -t 1 ]]; then
    printf "%s%s%s\n" "$escape_sequence" "$*" "$(tput sgr0)"
  else
    printf "%s\n" "$*"
  fi
  
